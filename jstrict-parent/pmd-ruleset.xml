<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Custom Rules" xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
	<description> PMD rules </description>
	<rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod"/>
	<rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly"/>
	<rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace"/>
	<rule ref="category/java/bestpractices.xml/AvoidReassigningLoopVariables"/>
	<rule ref="category/java/bestpractices.xml/AvoidReassigningParameters"/>
	<rule ref="category/java/bestpractices.xml/AvoidStringBufferField"/>
	<rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP"/>
	<rule ref="category/java/bestpractices.xml/CheckResultSet"/>
	<rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt"/>
	<rule ref="category/java/bestpractices.xml/ForLoopCanBeForeach">
	<priority>4</priority>
	</rule>
	<rule ref="category/java/bestpractices.xml/ForLoopVariableCount"/>
	<rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray"/>
	<rule ref="category/java/bestpractices.xml/MissingOverride"/>
	<rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInCaseInsensitiveComparisons"/>
	<rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInComparisons"/>
	<rule ref="category/java/bestpractices.xml/PreserveStackTrace"/>
	<rule ref="category/java/bestpractices.xml/SystemPrintln"/>
	<!--
	rule ref="category/java/bestpractices.xml/UnusedImports" /
	-->
	<rule ref="category/java/bestpractices.xml/UnusedFormalParameter"/>
	<!--
	rule ref="category/java/bestpractices.xml/UnusedLocalVariable" />
	  <rule ref="category/java/bestpractices.xml/UnusedPrivateField" />
	  <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod" /
	-->
	<rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty"/>
	<rule ref="category/java/bestpractices.xml/WhileLoopWithLiteralBoolean"/>
	<rule ref="category/java/codestyle.xml/AvoidUsingNativeCode"/>
	<rule ref="category/java/codestyle.xml/DontImportJavaLang"/>
	<rule ref="category/java/codestyle.xml/DuplicateImports"/>
	<rule ref="category/java/codestyle.xml/ExtendsObject"/>
	<rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop"/>
	<rule ref="category/java/codestyle.xml/TooManyStaticImports"/>
	<rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName"/>
	<rule ref="category/java/codestyle.xml/UnnecessaryModifier">
	<priority>4</priority>
	</rule>
	<rule ref="category/java/codestyle.xml/UnnecessaryReturn"/>
	<rule ref="category/java/codestyle.xml/UselessParentheses">
	<priority>4</priority>
	</rule>
	<rule ref="category/java/codestyle.xml/UselessQualifiedThis"/>
	<rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod"/>
	<!--
	rule ref="category/java/design.xml/AvoidCatchingGenericException" /
	-->
	<rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts">
	<properties>
	<property name="problemDepth" value="3"/>
	</properties>
	</rule>
	<rule ref="category/java/design.xml/AvoidRethrowingException"/>
	<rule ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException"/>
	<rule ref="category/java/design.xml/AvoidThrowingNullPointerException"/>
	<rule ref="category/java/design.xml/AvoidThrowingRawExceptionTypes"/>
	<rule ref="category/java/design.xml/AvoidUncheckedExceptionsInSignatures"/>
	<rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
	<rule ref="category/java/design.xml/CollapsibleIfStatements"/>
	<rule ref="category/java/design.xml/CyclomaticComplexity"/>
	<rule ref="category/java/design.xml/ExceptionAsFlowControl"/>
	<rule ref="category/java/design.xml/ExcessiveClassLength"/>
	<rule ref="category/java/design.xml/ExcessiveMethodLength"/>
	<rule ref="category/java/design.xml/ExcessiveParameterList"/>
	<rule ref="category/java/design.xml/ExcessivePublicCount"/>
	<rule ref="category/java/design.xml/FinalFieldCouldBeStatic">
	<priority>4</priority>
	</rule>
	<rule ref="category/java/design.xml/GodClass"/>
	<!--
	rule ref="category/java/design.xml/ImmutableField">
	    <priority>4</priority>
	  </rule
	-->
	<rule ref="category/java/design.xml/LogicInversion"/>
	<rule ref="category/java/design.xml/SimplifiedTernary"/>
	<rule ref="category/java/design.xml/SimplifyBooleanAssertion"/>
	<rule ref="category/java/design.xml/SimplifyBooleanReturns"/>
	<rule ref="category/java/design.xml/SimplifyConditional"/>
	<rule ref="category/java/design.xml/UselessOverridingMethod"/>
	<rule ref="category/java/errorprone.xml/AvoidAssertAsIdentifier"/>
	<rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop"/>
	<rule ref="category/java/errorprone.xml/AvoidCallingFinalize"/>
	<rule ref="category/java/errorprone.xml/AvoidCatchingNPE"/>
	<rule ref="category/java/errorprone.xml/AvoidCatchingThrowable"/>
	<rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
	<rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals">
	<priority>4</priority>
	<properties>
	<property name="separator" value=","/>
	<property name="maxDuplicateLiterals" value="4"/>
	<property name="minimumLength" value="3"/>
	<property name="skipAnnotations" value="true"/>
	<property name="exceptionList" value=""/>
	</properties>
	</rule>
	<rule ref="category/java/errorprone.xml/AvoidEnumAsIdentifier"/>
	<rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingMethodName">
	<priority>4</priority>
	</rule>
	<rule ref="category/java/errorprone.xml/AvoidLiteralsInIfCondition">
	<properties>
	<property name="ignoreMagicNumbers" value="-1,0"/>
	</properties>
	</rule>
	<rule ref="category/java/errorprone.xml/AvoidLosingExceptionInformation"/>
	<rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators"/>
	<rule ref="category/java/errorprone.xml/AvoidUsingOctalValues"/>
	<rule ref="category/java/errorprone.xml/BrokenNullCheck"/>
	<rule ref="category/java/errorprone.xml/CheckSkipResult"/>
	<rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray"/>
	<rule ref="category/java/errorprone.xml/CloseResource"/>
	<rule ref="category/java/errorprone.xml/CompareObjectsWithEquals"/>
	<rule ref="category/java/errorprone.xml/ConstructorCallsOverridableMethod"/>
	<rule ref="category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly"/>
	<rule ref="category/java/errorprone.xml/DoNotThrowExceptionInFinally"/>
	<rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices"/>
	<rule ref="category/java/errorprone.xml/EmptyCatchBlock"/>
	<rule ref="category/java/errorprone.xml/EmptyFinallyBlock"/>
	<rule ref="category/java/errorprone.xml/EmptyIfStmt"/>
	<rule ref="category/java/errorprone.xml/EmptyInitializer"/>
	<rule ref="category/java/errorprone.xml/EmptyStatementBlock"/>
	<rule ref="category/java/errorprone.xml/EmptyStatementNotInLoop"/>
	<rule ref="category/java/errorprone.xml/EmptySwitchStatements"/>
	<rule ref="category/java/errorprone.xml/EmptySynchronizedBlock"/>
	<rule ref="category/java/errorprone.xml/EmptyTryBlock"/>
	<rule ref="category/java/errorprone.xml/EmptyWhileStmt"/>
	<rule ref="category/java/errorprone.xml/EqualsNull"/>
	<rule ref="category/java/errorprone.xml/IdempotentOperations"/>
	<rule ref="category/java/errorprone.xml/ImportFromSamePackage"/>
	<rule ref="category/java/errorprone.xml/InstantiationToGetClass"/>
	<rule ref="category/java/errorprone.xml/InvalidSlf4jMessageFormat"/>
	<rule ref="category/java/errorprone.xml/JumbledIncrementer"/>
	<rule ref="category/java/errorprone.xml/MisplacedNullCheck"/>
	<rule ref="category/java/errorprone.xml/MissingBreakInSwitch"/>
	<rule ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass"/>
	<rule ref="category/java/errorprone.xml/MoreThanOneLogger"/>
	<rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode"/>
	<rule ref="category/java/errorprone.xml/ProperCloneImplementation"/>
	<rule ref="category/java/errorprone.xml/ReturnEmptyArrayRatherThanNull"/>
	<rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock"/>
	<rule ref="category/java/errorprone.xml/SingleMethodSingleton"/>
	<rule ref="category/java/errorprone.xml/SingletonClassReturningNewInstance"/>
	<rule ref="category/java/errorprone.xml/SuspiciousEqualsMethodName"/>
	<rule ref="category/java/errorprone.xml/UnconditionalIfStatement"/>
	<rule ref="category/java/errorprone.xml/UnnecessaryCaseChange"/>
	<rule ref="category/java/errorprone.xml/UnnecessaryConversionTemporary"/>
	<rule ref="category/java/errorprone.xml/UnusedNullCheckInEquals"/>
	<rule ref="category/java/errorprone.xml/UseCorrectExceptionLogging"/>
	<rule ref="category/java/errorprone.xml/UselessOperationOnImmutable"/>
	<rule ref="category/java/multithreading.xml/AvoidThreadGroup"/>
	<rule ref="category/java/multithreading.xml/DontCallThreadRun"/>
	<rule ref="category/java/multithreading.xml/DoubleCheckedLocking"/>
	<rule ref="category/java/performance.xml/BigIntegerInstantiation"/>
	<rule ref="category/java/performance.xml/BooleanInstantiation"/>
	<rule ref="category/java/performance.xml/ByteInstantiation"/>
	<rule ref="category/java/performance.xml/IntegerInstantiation"/>
	<rule ref="category/java/performance.xml/LongInstantiation"/>
	<rule ref="category/java/performance.xml/ShortInstantiation"/>
	<rule ref="category/java/performance.xml/StringInstantiation"/>
</ruleset>
